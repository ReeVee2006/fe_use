##FE project
##input data downloaded from google sheet
##data collated from VCEP CSpec information manually by Maddison McKenzie and Rehan Villani
##Author Rehan Villani - created 17.07.24

#Clear existing data and graphics
rm(list=ls())
graphics.off()
library(Hmisc)
library(tidyverse)
library(cowplot)

#set up files--------------------------------------------
#setwd 
date = strftime(Sys.Date(),"%y%m%d")

#Read Data #Villani et al 2024 Supp table 1
data=read.delim('20240716_CSpecCollation_clean_Villani24SuppT1.txt', sep = "\t", header = TRUE)
colnames(data)

#tidy the data
data = data %>% mutate_at(c("Gene","MAVE_DB","PS3_evidence_weighting_Path","BS3_evidence_weighting_ben"), as.factor)

#check data
head(data)
colnames(data)
summary(data)

#######summarising the data####

#count the number of assays total
nrow(data)

#count the number of VCEPs
length(unique(data$Expert_review_group))
summary(as.factor(data$Expert_review_group))

#count the number of genes
length(unique(data$Gene))
summary(data$Gene)

#count the number of variants total
sum(as.numeric(na.omit(data$Number_var_total)))

#summarise the PS3 evidence weights
summary(as.factor(data$PS3_evidence_weighting_Path))

#summarise the BS3 evidence weights
summary(as.factor(data$BS3_evidence_weighting_ben))


#how many assays are in MAVE DB
summary(data$MAVE_DB)

#identifing # MAVE assays/mave DB
colnames(data)
ht_assays = filter(data, Number_var_total >1000)
mave_assays = filter(data, MAVE_DB == "Yes")

####visualising the data

######investigating the number of assays and variants referenced in vceps####
theme_set(theme_gray(base_size = 14))

#graph the VCEP recommended advice for these assays
#will need to correct the bar order
data %>% 
  ggplot(aes(x = PS3_evidence_weighting_Path,fill = PS3_evidence_weighting_Path)) + 
  geom_bar()+
  theme(axis.text.x = element_text(size = 14, angle = 45, hjust = 1))+ scale_y_continuous() +
  labs(x = "", y = "number of assays", title = "PS3 Evidence level distribution in VCEP CSpecs")+
  theme(legend.position = 'none')+
  geom_text(stat='count', aes(label=after_stat(count), vjust=-1,size = 6))

#will need to correct the bar order
data %>% 
  ggplot(aes(x = BS3_evidence_weighting_ben,fill = BS3_evidence_weighting_ben)) + 
  geom_bar()+
  theme(axis.text.x = element_text(size = 14, angle = 45, hjust = 1))+ scale_y_continuous() +
  labs(x = "", y = "number of assays", title = "PS3 Evidence level distribution in VCEP CSpecs")+
  theme(legend.position = 'none')+
  geom_text(stat='count', aes(label=after_stat(count), vjust=-1,size = 6))

#theme_set(theme_gray(base_size = 14))

#graph the # assays per gene
g = data %>% 
  ggplot(aes(x = fct_infreq(Gene),fill = fct_infreq(Gene))) + 
  geom_bar()+
  theme(axis.text.x = element_text(size = 14, angle = 45, hjust = 1))+
  labs(x = "Gene", y = "number of assays", title = "Number of assays per gene")+
  theme(legend.position = 'none')+
  ylim(0,50)+
  geom_text(stat='count', aes(label=after_stat(count), vjust=-1,size = 6))
g

#graph the # variants per gene
colnames(data)
data$Number_var_total
summary(data$Number_var_total)

# table with sum # variants per gene
#exclude the rows with NO/NA number of variants in the assay then 
var_p_gene = data %>% subset(!is.na(Number_var_total)) %>% group_by(Gene) %>% summarise(sum_var_n = sum(Number_var_total))

plot_vpg = var_p_gene %>%
  ggplot(aes(x = reorder(Gene,sum_var_n, decreasing = TRUE), y = sum_var_n, fill = sum_var_n)) + 
  geom_col() +
  scale_y_log10()+
  theme(axis.text.x = element_text(size = 14, angle = 45, hjust = 1))+
  labs(x = "Gene", y = "number of assays", title = "Number of variants assayed per gene in VCEP CSpecs")
plot_vpg

#graph the # variants per assay
colnames(data)
data$assay_key = 1:nrow(data)

plot_vpa = data %>% 
  ggplot(aes(x = reorder(assay_key,Number_var_total, decreasing = TRUE),y = Number_var_total, fill = Number_var_total)) + 
  geom_col()+
  scale_y_sqrt()+
  theme(axis.text.x = element_blank())+
  labs(x = "assay", y = "number of variants (log2)", title = "Number of variants per assay")+
  theme(legend.position = 'none')
plot_vpa

data$var_n_grouped= case_when(
  data$Number_var_total >500 ~ ">500",
  data$Number_var_total <= 500 & data$Number_var_total > 100 ~ "100-500",
  data$Number_var_total <= 100 & data$Number_var_total > 50  ~ "50-100",
  data$Number_var_total <= 50 & data$Number_var_total > 10  ~ "10-50",
  data$Number_var_total <= 10 & data$Number_var_total > 5  ~ "5-10",
  data$Number_var_total <= 5  ~ "<=5")

summary(as.factor(data$var_n_grouped))

###group assaysby # variants
N_group_order = factor(c( ">500","100-500","50-100","10-50","5-10","<=5"), levels = c( ">500","100-500","50-100","10-50","5-10","<=5"))

var_n_groups = as.data.frame(summary(as.factor(data$var_n_grouped)))
colnames(var_n_groups) = c("var_n_p_grp")
var_n_groups$nvar_catgeory = as.factor(row.names(var_n_groups))

#reorder categories
var_n_groups$nvar_catgeory = factor(var_n_groups$nvar_catgeory, levels = c(">500","100-500","50-100","10-50","5-10","<=5"))

#graph # variants in each category
var_n_groups %>% na.omit(nvar_catgeory) %>% 
  ggplot(aes(x = nvar_catgeory, y = var_n_p_grp))+
  geom_col()+
  labs(x = "assay size (number of variants)", y = "number of assays", title = "Number of assays in size categories")+
  theme(legend.position = 'none')

######investigating the evidence strengths recommended###

#creating a column with the 'max' evidence level indicated
#summarise the PS3 evidence weights
summary(as.factor(data$PS3_evidence_weighting_Path))

#creating a column with additional category for each evidence level indicating considerations
summary(data$PS3_evidence_weighting_Path)

data$PS3_ev_P_comb = case_when(
  data$PS3_evidence_weighting_Path == "very strong, strong, moderate and supporting " ~ "very strong_conditional",
  data$PS3_evidence_weighting_Path == "strong" ~ "strong",
  data$PS3_evidence_weighting_Path == "strong, moderate and supporting" ~ "strong_conditional",
  data$PS3_evidence_weighting_Path == "strong and supporting" ~ "strong_conditional",
  data$PS3_evidence_weighting_Path == "moderate" ~ "moderate",
  data$PS3_evidence_weighting_Path == "moderate with conditions" ~ "moderate_conditional",
  data$PS3_evidence_weighting_Path == "moderate and supporting" ~ "moderate_conditional",
  data$PS3_evidence_weighting_Path == "supporting" ~ "supporting")

summary(as.factor(data$PS3_ev_P_comb))

#building columns for graph with conditions

data$PS3_ev_levelsum = case_when(
  data$PS3_evidence_weighting_Path == "very strong, strong, moderate and supporting " ~ "very strong",
  data$PS3_evidence_weighting_Path == "strong" ~ "strong",
  data$PS3_evidence_weighting_Path == "strong, moderate and supporting" ~ "strong",
  data$PS3_evidence_weighting_Path == "strong and supporting" ~ "strong",
  data$PS3_evidence_weighting_Path == "moderate" ~ "moderate",
  data$PS3_evidence_weighting_Path == "moderate with conditions" ~ "moderate",
  data$PS3_evidence_weighting_Path == "moderate and supporting" ~ "moderate",
  data$PS3_evidence_weighting_Path == "supporting" ~ "supporting")

data$PS3_ev_levelsum_cond = case_when(
  data$PS3_evidence_weighting_Path == "very strong, strong, moderate and supporting " ~ "conditional",
  data$PS3_evidence_weighting_Path == "strong" ~ "defined",
  data$PS3_evidence_weighting_Path == "strong, moderate and supporting" ~ "conditional",
  data$PS3_evidence_weighting_Path == "strong and supporting" ~ "conditional",
  data$PS3_evidence_weighting_Path == "moderate" ~ "defined",
  data$PS3_evidence_weighting_Path == "moderate with conditions" ~ "conditional",
  data$PS3_evidence_weighting_Path == "moderate and supporting" ~ "conditional",
  data$PS3_evidence_weighting_Path == "supporting" ~ "defined")

summary(as.factor(data$PS3_ev_levelsum))
summary(as.factor(data$PS3_ev_levelsum_cond))

#summarise the BS3 evidence weights
summary(as.factor(data$BS3_evidence_weighting_ben))

data$BS3_ev_B_comb = case_when(
  data$BS3_evidence_weighting_ben == "strong" ~ "strong",
  data$BS3_evidence_weighting_ben == "strong and supporting" ~ "strong_conditional",
  data$BS3_evidence_weighting_ben == "moderate with conditions" ~ "moderate_conditional",
  data$BS3_evidence_weighting_ben == "supporting" ~ "supporting",
  data$BS3_evidence_weighting_ben == "none" ~ "none")

#building columns for graph with conditions
data$BS3_ev_levelsum = case_when(
  data$BS3_evidence_weighting_ben == "strong" ~ "strong",
  data$BS3_evidence_weighting_ben == "strong and supporting" ~ "strong",
  data$BS3_evidence_weighting_ben == "moderate with conditions" ~ "moderate",
  data$BS3_evidence_weighting_ben == "supporting" ~ "supporting",
  data$BS3_evidence_weighting_ben == "none" ~ "none")

data$BS3_ev_levelsum_cond = case_when(
  data$BS3_evidence_weighting_ben == "strong" ~ "defined",
  data$BS3_evidence_weighting_ben == "strong and supporting" ~ "conditional",
  data$BS3_evidence_weighting_ben == "moderate with conditions" ~ "conditional",
  data$BS3_evidence_weighting_ben == "supporting" ~ "defined",
  data$BS3_evidence_weighting_ben == "none" ~ "defined")

summary(as.factor(data$BS3_evidence_weighting_ben))
summary(as.factor(data$BS3_ev_levelsum))
summary(as.factor(data$BS3_ev_levelsum_cond))

#graph the VCEP recommended advice for assays
theme_set(theme_gray(base_size = 12))

length(as.character(data$PS3_evidence_weighting_Path))
summary(data$PS3_evidence_weighting_Path)

#graph of the evidence level recommended by the VCEPs - pathogenic
summary(data$BS3_evidence_weighting_ben)
summary(as.factor(data$PS3_ev_P_comb))
evidence_order = c("very strong","strong","moderate","supporting","none")

#redo graph of pathogenic evidence levels but with the conditional evidence application separate
days_levels <- evidence_order
data$PS3_ev_levelsum <- factor(data$PS3_ev_levelsum, levels = evidence_order)

p3 = data %>% 
  ggplot(aes(x = fct_relevel(PS3_ev_levelsum,evidence_order),group = PS3_ev_P_comb, fill = fct_infreq(PS3_ev_P_comb))) + 
  geom_bar()+
  coord_flip()+
  theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1))+ 
  scale_y_continuous() + scale_x_discrete(drop = FALSE)+
  labs(x = "", y = "number of assays", title = "PS3 evidence levels")+
  theme(legend.position = 'none')+
  scale_fill_manual(values = c("orange","#00BA38","blue3","darkgreen","#2297E6","hotpink","#F8766D"))

summary(as.factor(data$PS3_ev_P_comb))

#graph of the evidence level recommended by the VCEPs - benign
data$BS3_ev_levelsum <- factor(data$BS3_ev_levelsum, levels = evidence_order)
summary(data$BS3_ev_levelsum)

b3 = data %>% 
  ggplot(aes(x = fct_relevel(BS3_ev_levelsum,evidence_order),group = BS3_ev_B_comb, fill = fct_infreq(BS3_ev_B_comb))) + 
  geom_bar()+
  coord_flip()+
  theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1))+ 
  scale_y_continuous() + scale_x_discrete(drop = FALSE)+
  labs(x = "", y = "number of assays", title = "BS3 evidence levels")+
  theme(legend.position = 'none')+
  scale_fill_manual(values = c("#F8766D","orange","#00BA38","darkgreen","#2297E6","blue3","hotpink"))

########figure 3------------------------------------------
plot_grid(g, plot_vpa, plot_grid(p3,b3, NULL,align = "hv", axis = "b", labels = c("C","D"),ncol = 2, nrow = 1), align = "h", axis = "b", labels = c("A", "B"),ncol = 1, nrow = 3, rel_heights = c(1,1,1.1))

ggsave(path = "D:/project_functionalevidence/manuscript_needs/figures", 
       filename = paste(gsub(":", "-", Sys.Date()),"_fig3.png",sep=""), 
       width = 10, height = 10, device='png', dpi=600)
